buildscript {
    repositories {
        maven { url='http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url='http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven { url = 'https://maven.minecraftforge.net/' }
        jcenter()
        mavenCentral()


    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
// 只需编辑这一行下面的代码，上面的代码添加并启用了Forge设置所需的东西。
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'


version = '1.0.3'
group='io.gitee.zhangsisiyao'
// http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ForgeFrame-1.12.2'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


minecraft {
    // 映射可以在任何时候更改，并且必须采用以下格式
    // snapshot_YYYYMMDD   快照是每晚构建的
    // stable_#            stable的由MCP团队构建
    // 使用非默认映射的风险由您自己承担。它们可能并不总是有效。
    // 只需在更改映射后重新运行安装任务，以更新工作区。
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // 默认情况下会创建一个名为sources jar的Srg。取消注释以禁用。


    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // 默认运行配置。
    // 这些可以根据需要进行调整、删除或复制。
    runs {
        client {

            // userdev环境的推荐日志数据
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // 控制台的推荐日志级别
            property 'forge.logging.console.level', 'info'
        }

        server {

            // userdev环境的推荐日志数据
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // 控制台的推    荐日志级别
            property 'forge.logging.console.level', 'debug'
        }
    }
}


repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    // Specify the version of io.gitee.zhangsisiyao.ForgeAPI.Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation 'com.alibaba:fastjson:2.0.3.graal'

    // https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-all
    implementation 'org.apache.xmlgraphics:batik-all:1.14'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.17'

    // https://mvnrepository.com/artifact/cn.hutool/hutool-all
    implementation 'cn.hutool:hutool-all:5.8.0'

    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation 'org.reflections:reflections:0.10.2'



    // Real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "examplemod",
                "Specification-Vendor": "examplemodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
//jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

//允许使用maven-publish任务发布的配置示例
//这是重新混淆jar文件的首选方法
//jar.finalizedBy('reobfJar')
//然而，如果您是在一个多项目构建中，开发时间需要未被发现的jar文件，因此您可以通过执行将混淆延迟到发布
publish.dependsOn('reobfJar')

jar {
    enabled = true
}
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}
task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}
sourceSets.main.resources.srcDirs = ["src/main/java/","src/main/resources"]
publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = group
            artifactId = archivesBaseName
            version = version

            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom{
                // 构件名称
                // 区别于artifactId，可以理解为artifactName
                name = 'Minecraft io.gitee.zhangsisiyao.ForgeAPI-1.12.2'
                // 构件描述
                description = 'Forge快速开发框架'
                // 构件主页
                url = 'https://gitee.com/zhangsisiyao/forge-api'
                // 许可证名称和地址
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        name = 'zhangsiyao'
                        email = '2963456487@qq.com'
                    }
                }
                // 版本控制仓库地址
                scm {
                    url = 'https://gitee.com/zhangsisiyao/forge-api'
                    connection = 'scm:git:https://gitee.com/zhangsisiyao/forge-api.git'
                    developerConnection = 'scm:git:https://gitee.com/zhangsisiyao/forge-api.git'
                }
            }
        }
    }
    // 定义发布到哪里
    repositories {
        maven {
            name 'release'
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                // 这里就是之前在issues.sonatype.org注册的账号
                username = "${sonatypeUsername}"
                password = "${sonatypePassword}"
            }
        }
        maven {
            name 'snapshot'
            url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                // 这里就是之前在issues.sonatype.org注册的账号
                username = "${sonatypeUsername}"
                password = "${sonatypePassword}"
            }
        }
    }
}


javadoc {
    // <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    // 防止本地打开中文乱码
//        options.addStringOption("charset", "UTF-8")
    options.encoding = "UTF-8"
    failOnError = false
}


allprojects {
    repositories {
        maven { url='http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url='http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    }
}
compileJava.options.encoding("UTF-8")

sourceSets{
    main{
        output.resourcesDir = output.classesDir
    }
}

signing {
    sign publishing.publications.mavenJava
}

